{
  "name": "tdc-cc-lambda-with-aws-serverless-express",
  "version": "2.1.1",
  "description": "TDS's Code Challenge - Lambda Function. Lambda inserts user images, resizes them, then updates the contacts database.",
  "main": "lambda.js",
  "config": {
    "s3BucketName": "tds-back-end-code-challenge-bucket",
    "region": "us-east-2",
    "cloudFormationStackName": "TDSCodeChallengeLambdaExpressStack",
    "functionName": "TDSCodeChallengeLambda",
    "accountId": "153933294904"
  },
  "scripts": {
    "start": "node app.local.js",
    "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
    "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
    "win-config": "npm run config",
    "win-deconfig": "npm run deconfig",
    "win-local": "npm run local",
    "win-invoke-lambda": "aws lambda invoke --function-name %npm_package_config_functionName% --region %npm_package_config_region% --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "win-create-bucket": "aws s3 mb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-delete-bucket": "aws s3 rb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket %npm_package_config_s3BucketName% --output-template packaged-sam.yaml --region %npm_package_config_region%",
    "win-deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name %npm_package_config_cloudFormationStackName% --capabilities CAPABILITY_IAM --region %npm_package_config_region%",
    "win-package-deploy": "npm run win-package && npm run win-deploy",
    "win-delete-stack": "aws cloudformation delete-stack --stack-name %npm_package_config_cloudFormationStackName% --region %npm_package_config_region%",
    "win-setup": "npm install && (aws s3api get-bucket-location --bucket %npm_package_config_s3BucketName% --region %npm_package_config_region% || npm run win-create-bucket) && npm run win-package-deploy"
  },
  "license": "Apache-2.0",
  "dependencies": {
    "aws-sdk": "^2.370.0",
    "aws-serverless-express": "^3.3.3",
    "body-parser": "^1.17.1",
    "busboy": "^0.2.14",
    "busboy-body-parser": "^0.3.2",
    "compression": "^1.6.2",
    "connect-busboy": "0.0.2",
    "cors": "^2.8.3",
    "express": "^4.15.2",
    "moment": "^2.22.2",
    "mysql": "^2.16.0",
    "sharp": "^0.21.0"
  },
  "devDependencies": {
    "eslint": "^5.9.0"
  }
}
